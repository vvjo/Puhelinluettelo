{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/personServices.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilter","Persons","personsToShow","map","pers","name","number","onClick","delete","id","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","put","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","notifyMsg","setNotifyMsg","errOrNotify","setErrOrNotify","useEffect","perService","updOverlay","console","log","length","some","e","includes","filter","event","target","preventDefault","personObj","key","window","confirm","findIndex","person","ok","catch","er","setTimeout","returnedPerson","concat","erro","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf6c6ec9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n      <form>filter shown with: <input value={props.newFilter} onChange={props.handleFilter}></input></form>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n    const personsLi = () => props.personsToShow.map(pers =>\r\n    <li>{pers.name} {pers.number} <button onClick={() => props.delete(pers.id)}>delete</button></li>)\r\n    return (\r\n        <ul>\r\n            {personsLi()}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.addPerson}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleNameChange} /><br />\r\n          number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, del }","import React from 'react'\r\n\r\nconst Notification = ({ message , className}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport perService from './services/personServices'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [newFilter, setNewFilter] = useState(\"\")\n  const [notifyMsg, setNotifyMsg] = useState(null)\n  const [errOrNotify, setErrOrNotify] = useState(\"notification\")\n\n  useEffect(() => {\n    perService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const updOverlay = () => {\n    perService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }\n\n  console.log(persons.length)\n\n  const personsToShow = persons.some(e => e.name.includes(newFilter)) ? persons.filter(e => e.name.includes(newFilter)) : persons\n\n  const deletePerson = (id) => {\n    if (window.confirm(\"Delete this person?\")) {\n      setPersons(persons.filter(person => person.id !== id))\n      perService.del(id)\n        .catch(erro => {\n          setErrOrNotify(\"error\")\n          setNotifyMsg(\"This person doesn't exist in database\")         \n          setTimeout(() => {\n            setErrOrNotify(\"notification\")\n            updOverlay()\n          }, 5000)\n        })\n      setNotifyMsg(`${id}. deleted`)\n      setTimeout(() => {\n        setNotifyMsg(null)\n      }, 5000)\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObj = {\n      name: newName,\n      number: newNumber,\n      key: newName\n    }\n\n    if (persons.some(e => e.name === personObj.name)) {\n      if (window.confirm(`${personObj.name} is already added to phonebook. Want to update?`)) {\n        perService\n          .update(persons.findIndex(person => newName === person.name) + 1, personObj)\n          .then(ok => {\n            updOverlay()\n          })\n          .catch(er => {\n            setErrOrNotify(\"error\")\n            setNotifyMsg(`${personObj.name} doesn't exist in database`)\n            setTimeout(() => {\n              setNotifyMsg(null)\n              setErrOrNotify(\"notification\")\n              updOverlay()\n            }, 5000)\n          })\n        setNotifyMsg(`${personObj.name} phonenumber updated`)\n        setTimeout(() => {\n          setNotifyMsg(null)\n        }, 5000)\n      }\n    } else {\n      perService\n        .create(personObj)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotifyMsg(`Added ${personObj.name}`)\n          setTimeout(() => {\n            setNotifyMsg(null)\n          }, 5000)\n        })\n    }\n    setNewName('')\n    setNewNumber(\"\")\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notifyMsg} className={errOrNotify} />\n      <Filter newFilter={newFilter} handleFilter={handleFilter} />\n      <h2>Add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} delete={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}